"use strict";

const { MongoClient, MongoSystemError, Double } = require("mongodb");
require("dotenv").config();
const { MONGO_URI, CLOUDINARY_URL, API_KEY, API_SECRET} = process.env;
const { v4: uuidv4 } = require("uuid");

const cloudinary = require("cloudinary").v2;
cloudinary.config({
  cloud_name: "sample",
  api_key: API_KEY,
  api_secret: API_SECRET,
  secure: true,
});


const options = {
  useNewUrlParser: true,
  useUnifiedTopology: true,
};

///handlers

//// add user
const addUser = async (req, res) => {
    const { firstName, lastName, email } = req.body;
  console.log(req.body)
    const newUser = {
      _id: uuidv4(),
      ...req.body,
    };
    const client = new MongoClient(MONGO_URI, options);
    try {
      await client.connect();
      console.log("connected")
      const db = client.db("AudioPlacebo");
      //   add user
      const insertResult = await db.collection("users").insertOne(newUser);
    
      if (insertResult) {
        return res.status(200).json({ status: 200, message: newUser });
      } else {
        return res
          .status(400)
          .json({ status: 400, message: "Cannot submit form" });
      }
    } catch (err) {
      console.log(err.mesage);
    } finally {
      await client.close();
    }
  };
  
  //getPlacebo

  const getPlacebo = async (req, res) => {

    function waitForAllUploads(id, err, image) {
      uploads[id] = image;
      var ids = Object.keys(uploads);
      if (ids.length === 6) {
        console.log();
        console.log('**  uploaded all files (' + ids.join(',') + ') to cloudinary');
      }
    }
    function waitForAllUploads(id, err, image) {
  uploads[id] = image;
  var ids = Object.keys(uploads);
  if (ids.length === 6) {
    console.log();
    console.log('**  uploaded all files (' + ids.join(',') + ') to cloudinary');
    performTransformations();
  }
}
// function upload(file: string, options?: UploadApiOptions, callback?: UploadResponseCallback): Promise<UploadApiResponse>;

  cloudinary.uploader.upload('https://res.cloudinary.com/df6wmqnl6/image/upload/v1654262632/cld-sample-5.jpg', { tags: 'basic_sample' }, function (err, image) {
    console.log();
    console.log("** File Upload");
    if (err) { console.warn(err); }
    console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
    console.log("* " + image.url);
    waitForAllUploads("pizza", err, image);


  });
  }

  module.exports = {addUser, getPlacebo}